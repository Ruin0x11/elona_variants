#!/usr/bin/env ruby

require "date"
require "nokogiri"
require "yaml"

require_relative "../lib/elona_variants"

@variants = ElonaVariants.load(File.join(__dir__, "../data/variants.yml"))

@details = {}

@lookup = {}
@variants.each do |variant|
  @lookup[variant.name] = variant
end

def format_date(date)
  date.strftime("%m/%d/%Y")
end

def write_info(doc)
  latest_date = @variants.filter_map { |v| v.latest_release.date }.max

  doc.text <<END
This page will attempt to collect the major features of each Elona variant in an easily consumable overview. This is to better understand the scope of features that could be added to OpenNefia through its mod system.

Because each variant has so many changes, it's probably impractical to list them all here. For now I'll focus on the features that have the most importance to people.

Each variant can also have a mod identifier associated with it. In OpenNefia, we can implement "modpacks" by simply creating an empty mod that specifies a bunch of related mods as dependencies.

This page was autogenerated from data at the repository
END

  doc.a(href: "https://github.com/Ruin0x11/elona_variants") do
    doc.text "Ruin0x11/elona_variants"
  end

  doc.text <<END
. It is current as of #{format_date(latest_date)}, and will probably go out of date quickly. If there's a feature you want to see a mod created for, feel free to open a pull request that adds it there.
END
end

def write_variant_table(doc)
  doc.h2 "Table of Variants"

  doc.table do
    doc.thead do
      doc.tr do
        doc.th { doc.text "Name" }
        doc.th { doc.text "Full Name" }
        doc.th { doc.text "Created on" }
        doc.th { doc.text "Last updated" }
        doc.th { doc.text "Latest version" }
        doc.th { doc.text "Derived from" }
        doc.th { doc.text "Website" }
      end
    end
    @variants.each do |variant|
      doc.tr do
        doc.th do
          if @details[variant.name]
            doc.a(href: "##{variant.display_name}") { doc.text variant.name }
          else
            doc.text variant.name
          end
        end

        doc.th do
          if variant.long_name
            doc.text variant.long_name
          end
        end

        first = variant.earliest_release
        last = variant.latest_release

        doc.th do
          if first.date
            doc.text format_date(first.date)
          end
        end

        doc.th do
          if last.date
            doc.text format_date(last.date)
          end
        end

        doc.th do
          doc.text last.version
        end

        doc.th do
          if variant.derived_from
            doc.text @lookup[variant.derived_from[:name]].display_name
          end
        end

        doc.th do
          if variant.website
            doc.a(href: variant.website) { doc.text "Link" }
          end
        end
      end
    end
  end
end

def write_variant_lineage(doc)
  doc.h2 "Lineage of Variants"

  graph = ElonaVariants::Graph.new @variants
  svg = graph.build

  doc << svg.to_xml
end

def write_body(doc)
  write_info(doc)
  write_variant_table(doc)
  write_variant_lineage(doc)
end

builder = Nokogiri::HTML::Builder.new do |doc|
  doc.html do
    doc.body do
      write_body(doc)
    end
  end
end

puts builder.to_xml
